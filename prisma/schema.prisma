// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

model User {
    id               String         @id @default(auto()) @map("_id") @db.ObjectId
    username         String         @unique
    email            String         @unique
    password         String
    userRoles        UserRole[]
    userActivities   UserActivity[]
    twoFactorEnabled Boolean        @default(false)
    twoFactorSecret  String?
    createdAt        DateTime       @default(now())
}

model Role {
    id        String     @id @default(auto()) @map("_id") @db.ObjectId
    name      String     @unique
    userRoles UserRole[]
    createdAt DateTime   @default(now())
}

model UserRole {
    id        String   @id @default(auto()) @map("_id") @db.ObjectId
    userId    String   @db.ObjectId
    roleId    String   @db.ObjectId
    user      User     @relation(fields: [userId], references: [id])
    role      Role     @relation(fields: [roleId], references: [id])
    createdAt DateTime @default(now())
}

model UserActivity {
    id        String       @id @default(auto()) @map("_id") @db.ObjectId
    userId    String?      @db.ObjectId
    user      User?        @relation(fields: [userId], references: [id])
    type      ActivityType
    ip        String?
    details   String?
    createdAt DateTime     @default(now())
}

enum ActivityType {
    REGISTER
    FAILED_REGISTER
    LOGIN
    LOGOUT
    PASSWORD_CHANGE
    PASSWORD_RESET
    FAILED_LOGIN
    ENABLE_2FA
    DISABLE_2FA
    FAILED_2FA_VERIFICATION
    SUCCESS_2FA_VERIFICATION
    UPDATE_USER
}
